{"version":3,"file":"rating.min.js","sources":["../src/rating.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the courses view for the overview block.\n *\n * @module     tool_courserating/rating\n * @copyright  2022 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport ModalForm from \"core_form/modalform\";\nimport ModalFactory from \"core/modal_factory\";\nimport Fragment from \"core/fragment\";\nimport Templates from \"core/templates\";\n\nconst SELECTORS = {\n    COURSERATING: '.customfield_tool_courserating',\n    ADD_RATING: '[data-action=tool_courserating-addrating][data-courseid]',\n    VIEW_RATINGS: '.tool_courserating-cfield .tool_courserating-ratings',\n    FLAG_RATING: '[data-action=tool_courserating-toggleflag]',\n    DELETE_RATING: `[data-action='tool_courserating-delete-rating']`,\n    USER_RATING: `[data-for='tool_courserating-user-rating']`,\n    CFIELD_WRAPPER: `[data-for='tool_courserating-cfield-wrapper'][data-courseid]`,\n};\n\nlet systemContextId;\n\nexport const init = (systemContextIdParam) => {\n    systemContextId = systemContextIdParam;\n\n    document.addEventListener('click', e => {\n        const addRatingElement = e.target.closest(SELECTORS.ADD_RATING),\n            viewRatingsElement = e.target.closest(SELECTORS.VIEW_RATINGS),\n            deleteRatingElement = e.target.closest(SELECTORS.DELETE_RATING);\n\n        if (addRatingElement) {\n            e.preventDefault();\n            const courseid = addRatingElement.getAttribute('data-courseid');\n            addRating(courseid);\n        } else if (viewRatingsElement) {\n            e.preventDefault();\n            const classes = (' ' + viewRatingsElement.getAttribute('class') + ' '),\n                matches = classes.match(/ tool_courserating-ratings-courseid-(\\d+) /);\n            if (matches) {\n                viewRatings(matches[1]);\n            }\n        } else if (deleteRatingElement) {\n            e.preventDefault();\n            const ratingid = deleteRatingElement.getAttribute('data-ratingid');\n            deleteRating(ratingid);\n        }\n    });\n\n    document.addEventListener('core/inplace_editable:updated', e => {\n        const inplaceEditable = e.target;\n        if (inplaceEditable.dataset.component === 'tool_courserating' && inplaceEditable.dataset.itemtype === 'flag') {\n            const ratingid = inplaceEditable.dataset.itemid;\n            const node = document.querySelector(`[data-for='tool_courserating-user-flag'][data-ratingid='${ratingid}']`);\n            if (node) {\n                Fragment.loadFragment('tool_courserating', 'rating_flag', systemContextId, {ratingid}).done((html, js) => {\n                    Templates.replaceNode(node, html, js);\n                });\n            }\n        }\n    });\n};\n\n/**\n * Add ratings dialogue\n *\n * @param {Number} courseid\n */\nconst addRating = (courseid) => {\n    const form = new ModalForm({\n        formClass: 'tool_courserating\\\\form\\\\addrating',\n        args: {courseid},\n        modalConfig: {\n            title: getString('addrating', 'tool_courserating'),\n        },\n    });\n\n    // When form is saved, refresh it to remove validation errors, if any:\n    form.addEventListener(form.events.FORM_SUBMITTED, () => {\n        getString('changessaved')\n            .then(addToast)\n            .catch(null);\n        refreshRating(courseid);\n    });\n\n    form.show();\n};\n\n/**\n * View ratings dialogue\n *\n * @param {Number} courseid\n */\nconst viewRatings = (courseid) => {\n    ModalFactory.create({\n        type: ModalFactory.types.CANCEL,\n        title: getString('coursereviews', 'tool_courserating'),\n        large: true,\n        buttons: {\n            cancel: getString('closebuttontitle', 'core'),\n        },\n        removeOnClose: true,\n    })\n        .then(modal => {\n            modal.setLarge();\n            Fragment.loadFragment('tool_courserating', 'course_ratings_popup', systemContextId, {courseid}).done((html, js) => {\n                modal.setBody(html);\n                Templates.runTemplateJS(js);\n            });\n            modal.show();\n            return modal;\n        })\n        .fail(() => null);\n};\n\n/**\n * Delete rating with specified id\n *\n * @param {Number} ratingid\n */\nconst deleteRating = (ratingid) => {\n    const form = new ModalForm({\n        formClass: 'tool_courserating\\\\form\\\\deleterating',\n        args: {ratingid},\n        modalConfig: {\n            title: getString('deleterating', 'tool_courserating'),\n        },\n    });\n\n    // When form is saved, rating should be deleted.\n    form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n        const el = document.querySelector(SELECTORS.USER_RATING + `[data-ratingid='${e.detail.ratingid}'`);\n        if (el) {\n            el.remove();\n        }\n        refreshRating(e.detail.courseid);\n    });\n\n    form.show();\n};\n\n/**\n * Refresh course rating summary\n *\n * @param {Number} courseid\n */\nconst refreshRating = (courseid) => {\n    let el1 = document.getElementsByClassName('tool_courserating-ratings-courseid-' + courseid);\n    if (el1 && el1.length) {\n        const cfield = el1[0].closest(SELECTORS.COURSERATING);\n        Fragment.loadFragment('tool_courserating', 'cfield', systemContextId, {courseid}).done((html, js) => {\n            Templates.replaceNode(cfield, html, js);\n        });\n    }\n\n    const el2 = document.querySelector(SELECTORS.CFIELD_WRAPPER + `[data-courseid='${courseid}']`);\n    if (el2) {\n        Fragment.loadFragment('tool_courserating', 'cfield', systemContextId, {courseid}).done((html, js) => {\n            el2.innerHTML = '';\n            Templates.appendNodeContents(el2, html, js);\n        });\n    }\n\n    const el3 = document.querySelector(`[data-for='tool_courserating-summary'][data-courseid='${courseid}']`);\n    if (el3) {\n        Fragment.loadFragment('tool_courserating', 'course_ratings_summary', systemContextId, {courseid}).done((html, js) => {\n            el3.innerHTML = '';\n            Templates.appendNodeContents(el3, html, js);\n        });\n    }\n};\n"],"names":["SELECTORS","systemContextId","systemContextIdParam","document","addEventListener","e","addRatingElement","target","closest","viewRatingsElement","deleteRatingElement","preventDefault","courseid","getAttribute","addRating","matches","match","viewRatings","ratingid","deleteRating","inplaceEditable","dataset","component","itemtype","itemid","node","querySelector","loadFragment","done","html","js","replaceNode","form","ModalForm","formClass","args","modalConfig","title","events","FORM_SUBMITTED","then","addToast","catch","refreshRating","show","create","type","ModalFactory","types","CANCEL","large","buttons","cancel","removeOnClose","modal","setLarge","setBody","runTemplateJS","fail","el","detail","remove","el1","getElementsByClassName","length","cfield","el2","innerHTML","appendNodeContents","el3"],"mappings":"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"}